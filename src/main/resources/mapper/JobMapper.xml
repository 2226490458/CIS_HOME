<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.JobMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Job" >
    <id column="job_id" property="jobId" jdbcType="INTEGER" />
    <result column="job_name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_remark" property="jobRemark" jdbcType="VARCHAR" />
    <result column="job_status" property="jobStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    job_id, job_name, job_remark, job_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from job
    where job_id = #{jobId,jdbcType=INTEGER}
  </select>
  <select id="listOfJob" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from job
    <where>
      job_status = 1
      <if test="jobName != null">
        and job_name like #{jobName}
      </if>
    </where>
    limit #{page}, #{size}
  </select>
    <select id="listOfJobNameAndId" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from job
      where job_status = 1
    </select>
    <select id="selectJobAmount" resultType="java.lang.Integer">
      select
      COUNT(*)
      from job
      <where>
        job_status = 1
        <if test="jobName != null">
          and job_name like #{jobName}
        </if>
      </where>
    </select>

  <insert id="insert" parameterType="com.example.demo.entity.Job" useGeneratedKeys="true" keyColumn="job_id" keyProperty="jobId" >
    insert into job (job_name, job_remark,
      job_status)
    values (#{jobName,jdbcType=VARCHAR}, #{jobRemark,jdbcType=VARCHAR},
      #{jobStatus,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Job" >
    update job
    <set >
      <if test="jobName != null" >
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobRemark != null" >
        job_remark = #{jobRemark,jdbcType=VARCHAR},
      </if>
      <if test="jobStatus != null" >
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=INTEGER}
  </update>
</mapper>