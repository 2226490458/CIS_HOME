<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.DocumentMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Document" >
    <id column="document_id" property="documentId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="document_title" property="documentTitle" jdbcType="VARCHAR" />
    <result column="document_name" property="documentName" jdbcType="VARCHAR" />
    <result column="document_remark" property="documentRemark" jdbcType="VARCHAR" />
    <result column="document_create" property="documentCreate" jdbcType="TIMESTAMP" />
    <result column="document_status" property="documentStatus" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    document_id, user_id, document_title, document_name, document_remark, document_create,
    document_status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from document
    where document_id = #{documentId,jdbcType=INTEGER}
  </select>
  <select id="listOfDocument" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from document
    <where>
      document_status = 1
      <if test="documentTitle != null">
        and document_title like #{documentTitle}
      </if>
    </where>
    limit #{page}, #{size}
  </select>
  <select id="selectDocAmount" resultType="java.lang.Integer">
    select COUNT(*) from document where document_status = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from document
    where document_id = #{documentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Document" useGeneratedKeys="true" keyColumn="document_id" keyProperty="documentId" >
    insert into document (user_id, document_title,
      document_name, document_remark,
      document_status)
    values (#{userId,jdbcType=INTEGER}, #{documentTitle,jdbcType=VARCHAR},
      #{documentName,jdbcType=VARCHAR}, #{documentRemark,jdbcType=VARCHAR}, #{documentStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Document" useGeneratedKeys="true" keyColumn="document_id" keyProperty="documentId" >
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="documentTitle != null" >
        document_title,
      </if>
      <if test="documentName != null" >
        document_name,
      </if>
      <if test="documentRemark != null" >
        document_remark,
      </if>
      <if test="documentStatus != null" >
        document_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="documentTitle != null" >
        #{documentTitle,jdbcType=VARCHAR},
      </if>
      <if test="documentName != null" >
        #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="documentRemark != null" >
        #{documentRemark,jdbcType=VARCHAR},
      </if>
      <if test="documentStatus != null" >
        #{documentStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Document" >
    update document
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="documentTitle != null" >
        document_title = #{documentTitle,jdbcType=VARCHAR},
      </if>
      <if test="documentName != null" >
        document_name = #{documentName,jdbcType=VARCHAR},
      </if>
      <if test="documentRemark != null" >
        document_remark = #{documentRemark,jdbcType=VARCHAR},
      </if>
      <if test="documentCreate != null" >
        document_create = #{documentCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="documentStatus != null" >
        document_status = #{documentStatus,jdbcType=INTEGER},
      </if>
    </set>
    where document_id = #{documentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Document" >
    update document
    set user_id = #{userId,jdbcType=INTEGER},
      document_title = #{documentTitle,jdbcType=VARCHAR},
      document_name = #{documentName,jdbcType=VARCHAR},
      document_remark = #{documentRemark,jdbcType=VARCHAR},
      document_create = #{documentCreate,jdbcType=TIMESTAMP},
      document_status = #{documentStatus,jdbcType=INTEGER}
    where document_id = #{documentId,jdbcType=INTEGER}
  </update>
</mapper>