<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.mapper.DocumentMapper" >
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Document" >
    <id column="document_id" property="documentId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="document_title" property="documentTitle" jdbcType="VARCHAR" />
    <result column="docement_name" property="docementName" jdbcType="VARCHAR" />
    <result column="docement_remark" property="docementRemark" jdbcType="VARCHAR" />
    <result column="document_create" property="documentCreate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    document_id, user_id, document_title, docement_name, docement_remark, document_create
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from document
    where document_id = #{documentId,jdbcType=INTEGER}
  </select>
    <select id="listOfDocument" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from document
      where document_title like #{documentTitle}
      limit #{page}, #{size}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from document
    where document_id = #{documentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Document" >
    insert into document (document_id, user_id, document_title, 
      docement_name, docement_remark, document_create
      )
    values (#{documentId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{documentTitle,jdbcType=VARCHAR}, 
      #{docementName,jdbcType=VARCHAR}, #{docementRemark,jdbcType=VARCHAR}, #{documentCreate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Document" >
    insert into document
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="documentId != null" >
        document_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="documentTitle != null" >
        document_title,
      </if>
      <if test="docementName != null" >
        docement_name,
      </if>
      <if test="docementRemark != null" >
        docement_remark,
      </if>
      <if test="documentCreate != null" >
        document_create,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="documentId != null" >
        #{documentId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="documentTitle != null" >
        #{documentTitle,jdbcType=VARCHAR},
      </if>
      <if test="docementName != null" >
        #{docementName,jdbcType=VARCHAR},
      </if>
      <if test="docementRemark != null" >
        #{docementRemark,jdbcType=VARCHAR},
      </if>
      <if test="documentCreate != null" >
        #{documentCreate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Document" >
    update document
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="documentTitle != null" >
        document_title = #{documentTitle,jdbcType=VARCHAR},
      </if>
      <if test="docementName != null" >
        docement_name = #{docementName,jdbcType=VARCHAR},
      </if>
      <if test="docementRemark != null" >
        docement_remark = #{docementRemark,jdbcType=VARCHAR},
      </if>
      <if test="documentCreate != null" >
        document_create = #{documentCreate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where document_id = #{documentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Document" >
    update document
    set user_id = #{userId,jdbcType=INTEGER},
      document_title = #{documentTitle,jdbcType=VARCHAR},
      docement_name = #{docementName,jdbcType=VARCHAR},
      docement_remark = #{docementRemark,jdbcType=VARCHAR},
      document_create = #{documentCreate,jdbcType=TIMESTAMP}
    where document_id = #{documentId,jdbcType=INTEGER}
  </update>
</mapper>